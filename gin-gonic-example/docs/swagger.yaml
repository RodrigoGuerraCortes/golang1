basePath: /
definitions:
  main.ErrorResponse:
    properties:
      error:
        example: invalid request
        type: string
    type: object
  main.SuccessResponse:
    properties:
      status:
        example: ok
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server celler server.
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin:
    post:
      consumes:
      - application/json
      description: Updates a value associated with a user after Basic Auth validation
      parameters:
      - description: Input Json con algun valor
        in: body
        name: body
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 'status: ok'
          schema:
            $ref: '#/definitions/main.SuccessResponse'
        "400":
          description: 'error: invalid request'
          schema:
            $ref: '#/definitions/main.ErrorResponse'
        "401":
          description: 'error: unauthorized'
          schema:
            $ref: '#/definitions/main.ErrorResponse'
      security:
      - BasicAuth: []
      summary: Ingresar datos especificos
      tags:
      - admin
  /someJSON:
    get:
      description: Returns a simple JSON object
      produces:
      - application/json
      responses:
        "200":
          description: Successful Response
          schema:
            additionalProperties: true
            type: object
      summary: Show a JSON response
  /testing:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Accepts form data and returns the formatted response as a string
      parameters:
      - description: Name of the person
        in: formData
        name: name
        required: true
        type: string
      - description: Address of the person
        in: formData
        name: address
        required: true
        type: string
      - description: Birthday of the person (YYYY-MM-DD)
        in: formData
        name: birthday
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: Formatted response with name, address, and birthday
          schema:
            type: string
        "400":
          description: Invalid form data
          schema:
            additionalProperties: true
            type: object
      summary: Process form data and display result
      tags:
      - default
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
